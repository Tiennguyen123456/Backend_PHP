openapi: 3.0.3
info:
  title: Checkin System - OpenAPI 3.0
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - url: http://backendcheckin.test/api
    description: SwaggerHub API Auto Mocking
  - url: https://virtserver.swaggerhub.com/minhtanle/CheckinSystem/1.0.0
tags:
  - name: Authentication
    description: Operations about authentication
  - name: Users
    description: Operations about Users
paths:
  /login:
    post:
      tags:
        - Authentication
      summary: Start login
      description: ""
      operationId: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Login"
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccess"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "422":
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginValidateFailed"
  /reset-password:
    post:
      tags:
        - Authentication
      summary: Make action reset password over email
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Resourse Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message_code:
                    type: string
                    enum: [TOKEN_NOT_FOUND, USER_NOT_FOUND]
                  data:
                    type: string
                    example: null
  /reset-password/{token}:
    post:
      tags:
        - Authentication
      summary: Update password by token
      operationId: updatePassword
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Resourse Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 400
                  message_code:
                    type: string
                    enum: [TOKEN_NOT_FOUND, USER_NOT_FOUND]
                  data:
                    type: string
                    example: null
  /self:
    get:
      tags:
        - Users
      summary: Get user profile
      operationId: self
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Self"
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - Users
      summary: Get list user
      operationId: users
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
        - name: search[role_id]
          in: query
          description: Role ID
          schema:
            type: integer
        - name: search[status]
          in: query
          description: Status of user
          schema:
            type: string
            enum: [ACTIVE, NEW]
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUser"
      security:
        - bearerAuth: []
  /user/store:
    post:
      tags:
        - Users
      summary: Create or Update user
      operationId: updateOrCreateUser
      description: This route use for Create or Update (<b>with ID</b>)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserById"
      security:
        - bearerAuth: []
  /user/{id}:
    get:
      tags:
        - Users
      summary: Find user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserById"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Users
      summary: Delete user by id
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
  /roles:
    get:
      tags:
        - Roles
      summary: Get list roles
      operationId: roles
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRole"
      security:
        - bearerAuth: []
  /role/store:
    post:
      tags:
        - Roles
      summary: Create a new role
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRole"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateRole"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoleSuccess"
        "500":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 500
                  message_code:
                    type: string
                    example: null
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
  /role/assign:
    post:
      tags:
        - Roles
      summary: Assign permission
      operationId: assignPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleAssignPermission"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    type: string
                    example: null
        "500":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 500
                  message_code:
                    type: string
                    example: null
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
  /permissions:
    get:
      tags:
        - Permissions
      summary: Get list permissions
      operationId: permissions
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPermission"
      security:
        - bearerAuth: []
  /permission/self:
    get:
      tags:
        - Permissions
      summary: "Show all current user's permission"
      operationId: currentUserPermission
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyPermission"
      security:
        - bearerAuth: []
  /permission/role/{roleID}:
    get:
      tags:
        - Permissions
      summary: "Show all permission by role ID"
      operationId: getPermissionByRoleId
      parameters:
        - name: roleID
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyPermission"
      security:
        - bearerAuth: []
  /permission/assign:
    post:
      tags:
        - Permissions
      summary: "Assign permission to role"
      operationId: assignPermissionUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleAssignPermission"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    type: string
                    example: null
        "500":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  status_code:
                    type: integer
                    example: 500
                  message_code:
                    type: string
                    example: null
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
  /companies:
    get:
      tags:
        - Company
      summary: "Get list company"
      operationId: companies
      parameters:
        - name: filters[tax_code]
          in: query
          description: Taxcode
          schema:
            type: string
        - name: search[name]
          in: query
          description: Search like name
          schema:
            type: string
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ListCompany"
      security:
        - bearerAuth: []
  /company/{id}:
    get:
      tags:
        - Company
      summary: "Show company by ID"
      operationId: getCompanyById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/CompanyResource"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: eror
                  status_code:
                    type: string
                    example: null
                  message_code:
                    type: string
                    example: "RESOURCE_NOT_FOUND"
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
    delete:
      tags:
        - Company
      summary: Delete Company by id
      operationId: deleteCompanyById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
  /company/store:
    post:
      tags:
        - Company
      summary: Create or Update Company
      operationId: updateOrCreateCompany
      description: "Create : not send ID <br><b>Update : post data with ID</b>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreCompany"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/StoreCompany"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/CompanyResource"
      security:
        - bearerAuth: []
  /events:
    get:
      tags:
        - Event
      summary: "Get list events"
      operationId: events
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ListEvent"
      security:
        - bearerAuth: []
  /event/store:
    post:
      tags:
        - Event
      summary: Create or Update event
      operationId: updateOrCreateEvent
      description: "Create : not send ID <br><b>Update : post data with ID</b>"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/StoreEvent"
          application/json:
            schema:
              $ref: "#/components/schemas/StoreEvent"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/EventResource"
      security:
        - bearerAuth: []
  /event/{id}:
    get:
      tags:
        - Event
      summary: "Show event by ID"
      operationId: getEventById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/EventResource"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: eror
                  status_code:
                    type: string
                    example: null
                  message_code:
                    type: string
                    example: "RESOURCE_NOT_FOUND"
                  data:
                    type: string
                    example: null
      security:
        - bearerAuth: []
    delete:
      tags:
        - Event
      summary: Delete event
      operationId: deleteEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
  /event/{id}/custom-fields:
    get:
      tags:
        - Event Custom Field
      summary: "Show custom field by Event ID"
      operationId: getCustomFieldByEventId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ListEventCustomField"
      security:
        - bearerAuth: []
  /event/{id}/custom-field/store:
    post:
      tags:
        - Event Custom Field
      summary: Create or Update event custom field
      operationId: updateOrCreateEventCustomField
      description: "Create : not send ID <br><b>Update : post data with ID</b>"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreEventCustomField"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    properties:
                      collection:
                        type: array
                        items:
                          $ref: "#/components/schemas/EventCustomFieldResource"
      security:
        - bearerAuth: []
  /event/custom-field/{id}:
    delete:
      tags:
        - Event Custom Field
      summary: Delete event custom field
      operationId: deleteEventCustomField
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
  /event/{id}/clients:
    get:
      tags:
        - Event Client
      summary: "Show list client by Event ID"
      operationId: getListClients
      parameters:
        - name: id
          in: path
          required: true
          description: Event id
          schema:
            type: integer
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/pageSizeParam"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ListClientResource"
      security:
        - bearerAuth: []
  /event/{id}/client/summary:
    get:
      tags:
        - Event Client
      summary: "Get information of client use for create campaign"
      operationId: getClientInfo
      parameters:
        - name: id
          in: path
          required: true
          description: Event id
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ClientSummaryResource"
      security:
        - bearerAuth: []
  /event/{id}/client/import:
    post:
      tags:
        - Event Client
      summary: Import Client from excel
      operationId: importClient
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File Excel
              required:
                - file
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    example: null
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
  /event/{id}/client/{clientId}:
    post:
      tags:
        - Event Client
      summary: Update Client info
      operationId: updateClient
      parameters:
        - name: id
          description: Event ID
          in: path
          required: true
          schema:
            type: integer
        - name: clientId
          description: Client ID
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateClientRequest"
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateClientRequest"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message_code:
                    type: string
                    example: null
                  data:
                    example: null
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/ErrorValidation"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Event Client
      summary: Delete client by id
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: clientId
          description: Client ID
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failed"
      security:
        - bearerAuth: []
components:
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          example: sysadmin@delfi.vn
        password:
          type: string
          minLength: 6
          example: sysadmin@
      required:
        - email
        - password
    LoginSuccess:
      type: object
      properties:
        status:
          type: string
          example: success
        message_code:
          type: string
          example: LOGIN_SUCCESS
        data:
          type: object
          example:
            {
              "id": 11,
              "username": "sysadmin",
              "name": "System Admin",
              "email": "sysadmin@delfi.vn",
              "type": "SYSTEM_ADMIN",
              "access_token": "1|whktRQmrURWof7wC6uaXwvz1XGsCF1V2840r2pMR2841301e",
              "token_type": "Bearer",
            }
    UnauthorizedError:
      type: object
      properties:
        status:
          type: string
          example: error
        message_code:
          type: string
          example: USER_NAME_OR_PASSWORD_INCORRECT
        data:
          type: string
          example: null
    LoginValidateFailed:
      type: object
      properties:
        status:
          type: string
          example: error
        message_code:
          type: string
          example: VALIDATION_ERROR
        data:
          type: string
          example: null
    Self:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          example:
            {
              "id": 11,
              "company_id": null,
              "event_id": null,
              "is_admin": true,
              "expire_date": null,
              "name": "System Admin",
              "username": "sysadmin",
              "email": "sysadmin@delfi.vn",
              "type": "SYSTEM_ADMIN",
              "gate": null,
              "avatar_path": null,
              "note": null,
              "status": "ACTIVE",
              "created_by": null,
              "updated_by": null,
              "last_login_at": "2024-02-05 15:01:51",
              "created_at": "2024-01-20 01:43:51",
              "updated_at": "2024-02-05 15:01:51",
              "role": "system-admin",
              "permissions": [
                "user_role:view",
                "user_role:create",
                "user_role:assign-to-user",
                "user_permission:view",
                "user_permission:assign-to-role",
                "user_permission:revoke-from-role",
                "user:view",
                "user:create",
                "user:create-admin",
                "user:update",
                "user:update-admin",
                "user:delete",
                "company:view",
                "company:create",
                "company:update",
                "company:delete",
              ]
            }
    ListUser:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          properties:
            collection:
              $ref: "#/components/schemas/UserCollection"
            pagination:
              $ref: "#/components/schemas/Pagination"
    ListRole:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          properties:
            collection:
              $ref: "#/components/schemas/RoleCollection"
            pagination:
              $ref: "#/components/schemas/Pagination"
    CreateRoleSuccess:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          properties:
            id:
              type: integer
              example: 2
            guard_name:
              type: string
              example: admin
            name:
              type: string
              example: admin
            enable:
              type: boolean
              example: true
            updated_at:
              type: string
              example: "2024-02-06 09:45:28"
            created_at:
              type: string
              example: "2024-02-06 09:45:28"
    UserById:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          example:
            {
              "id": 1,
              "company_id": null,
              "event_id": null,
              "is_admin": false,
              "expire_date": null,
              "name": "Yasmine Kling",
              "username": "rleuschke",
              "email": "gemard@example.net",
              "type": "WEB",
              "gate": null,
              "avatar_path": null,
              "note": null,
              "status": "ACTIVE",
              "created_by": null,
              "updated_by": 11,
              "last_login_at": "2024-02-06 08:07:25",
              "created_at": "2024-01-20 01:43:43",
              "updated_at": "2024-01-21 11:23:31",
              "roles": ["admin"],
            }
    Pagination:
      type: object
      properties:
        meta:
          type: object
          properties:
            current_page:
              type: integer
              format: int32
            from:
              type: integer
              format: int32
            to:
              type: integer
              format: int32
            per_page:
              type: integer
              format: int32
            total:
              type: integer
              format: int32
            last_page:
              type: integer
              format: int32
    UserCollection:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          company_id:
            type: integer
          is_admin:
            type: boolean
          name:
            type: string
          username:
            type: string
          email:
            type: string
          status:
            type: string
          expire_date:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          role:
            type: object
            example: []
    RoleCollection:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          guard_name:
            type: string
            example: "api"
          enable:
            type: integer
            example: 1
          is_hidden:
            type: integer
          created_at:
            type: string
            example: "2024-01-20 01:43:46"
          updated_at:
            type: string
            example: "2024-01-20 01:43:46"
    PermissionCollection:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          guard_name:
            type: string
            example: "api"
          created_at:
            type: string
            example: "2024-01-20 01:43:46"
          updated_at:
            type: string
            example: "2024-01-20 01:43:46"
    CreateUser:
      type: object
      description: "ID for update user, if not ID for create new user"
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        username:
          type: string
        role_id:
          type: integer
        status:
          type: string
          enum: [ACTIVE,NEW,INACTIVE]
        company_id:
          type: integer
      required:
        - email
        - name
        - username
        - role_id
        - status
        - company_id
    CreateRole:
      type: object
      properties:
        name:
          type: string
        guard_name:
          type: string
        enable:
          type: boolean
      required:
        - name
        - guard_name
        - enable
    RoleAssignPermission:
      type: object
      properties:
        permission_ids:
          type: object
          example: [1, 2, 3]
        role_id:
          type: integer
          example: 11
      required:
        - name
        - guard_name
        - enable
    Success:
      type: object
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: string
          example: null
    Failed:
      type: object
      properties:
        status:
          type: string
          example: error
        status_code:
          type: integer
          example: 400
        message_code:
          type: string
          example: null
        data:
          type: string
          example: null
    ListPermission:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          properties:
            collection:
              $ref: "#/components/schemas/PermissionCollection"
            pagination:
              $ref: "#/components/schemas/Pagination"
    MyPermission:
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 200
        message_code:
          type: string
          example: null
        data:
          type: object
          properties:
            count:
              type: integer
              example: 2
            collection:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: user_role:view
    ListCompany:
      properties:
        collection:
          type: array
          items:
            $ref: "#/components/schemas/CompanyResource"
        pagination:
          $ref: "#/components/schemas/Pagination"
    ListEvent:
      properties:
        collection:
          type: array
          items:
            $ref: "#/components/schemas/EventResource"
        pagination:
          $ref: "#/components/schemas/Pagination"
    ListEventCustomField:
      properties:
        collection:
          type: array
          items:
            $ref: "#/components/schemas/EventCustomFieldResource"
        pagination:
          $ref: "#/components/schemas/Pagination"
    CompanyResource:
        type: object
        properties:
          id:
            type: integer
            example: 1
          parent_id:
            type: string
            example: null
          is_default:
            type: boolean
            example: false
          code:
            type: integer
            example: "ABCD"
          name:
            type: string
          contact_email:
            type: string
          contact_phone:
            type: string
          website:
            type: string
          address:
            type: string
          city:
            type: string
          limited_users:
            type: string
            example: null
          limited_events:
            type: string
            example: null
          limited_campaigns:
            type: string
            example: null
          status:
            type: string
            enum: [NEW,ACTIVE,INACTIVE]
          created_at:
            type: string
            example: "2024-01-20 01:43:46"
          updated_at:
            type: string
            example: "2024-01-20 01:43:46"
    StoreCompany:
      type: object
      description: "ID for update user, if not ID for create new user"
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        tax_code:
          type: string
        address:
          type: string
        city:
          type: string
        contact_email:
          type: string
        contact_phone:
          type: string
        limited_campaigns:
          type: integer
          example: null
        limited_events:
          type: integer
          example: null
        limited_users:
          type: integer
          example: null
        status:
          type: string
          enum: [ACTIVE,NEW,INACTIVE]
        website:
          type: string
      required:
        - name
        - code
    StoreEvent:
      type: object
      description: "ID for update, if not ID for create"
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        start_time:
          type: string
          format: date
          example: '2023-12-31 10:00:00'
        end_time:
          type: string
          format: date
          example: '2023-12-31 22:00:00'
        company_id:
          type: integer
        status:
          type: string
          enum: [ACTIVE,NEW,INACTIVE,DONE,CANCEL]
        description:
          type: string
        email_content:
          type: string
          description: Content for send mail
        cards_content:
          type: string
          description: Content for send card
        location:
          type: string
      required:
        - name
        - code
        - status
        - start_time
        - end_time
        - company_id
    EventResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        company_id:
          type: integer
        code:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        start_time:
          type: string
          format: date
          example: '2023-12-31 10:00:00'
        end_time:
          type: string
          format: date
          example: '2023-12-31 22:00:00'
        email_content:
          type: string
        cards_content:
          type: string
        status:
          type: string
          enum: [ACTIVE,NEW,INACTIVE,DONE,CANCEL]
        created_by:
          type: integer
        updated_by:
          type: integer
        created_at:
          type: string
          example: "2024-01-20 01:43:46"
        updated_at:
          type: string
          example: "2024-01-20 01:43:46"
        main_fields:
          type: array
          items:
            properties:
              name:
                type: string
              description:
                type: string
        custom_fields:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
    EventCustomFieldResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        event_id:
          type: integer
        name:
          type: string
        value:
          type: string
        created_by:
          type: integer
        updated_by:
          type: integer
        created_at:
          type: string
          example: "2024-01-20 01:43:46"
        updated_at:
          type: string
          example: "2024-01-20 01:43:46"
    StoreEventCustomField:
      type: array
      items:
        properties:
          name:
            type: string
          value:
            type: string
          description:
            type: string
        required:
          - name
          - value
          - description
    ListClientResource:
      properties:
        count:
          type: integer
          example: 10
        totalClient:
          type: integer
          example: 10
        totalCheckin:
          type: integer
          example: 3
        collection:
          type: array
          items:
            $ref: "#/components/schemas/ClientResource"
        pagination:
          $ref: "#/components/schemas/Pagination"
    ClientResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        event_id:
          type: integer
        fullname:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        is_checkin:
          type: integer
          enum: [0,1]
        type:
          type: string
        status:
          type: string
        created_by:
          type: integer
        updated_by:
          type: integer
        created_at:
          type: string
          example: "2024-01-20 01:43:46"
        updated_at:
          type: string
          example: "2024-01-20 01:43:46"
    UpdateClientRequest:
      type: object
      properties:
        fullname:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        status:
          type: string
        is_checkin:
          type: integer
          enum: [0,1]
      required:
        - fullname
        - email
        - phone
    ErrorValidation:
      type: object
      properties:
        status:
          type: string
          example: success
        status_code:
          type: integer
          example: 422
        message_code:
          type: string
          example: VALIDATION_ERROR
        data:
          type: object
          example: {
              "phone": [
                  "The phone has already been taken."
              ]
          }
    ClientSummaryResource:
      properties:
        totalClient:
          type: integer
          example: 10
        totalCheckin:
          type: integer
          example: 3
        groups:
          type: array
          items:
            properties:
              name:
                type: string
              total:
                type: integer
  parameters:
    pageParam:
      in: query
      name: page
      required: false
      description: Page of result
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSizeParam:
      in: query
      name: pageSize
      required: false
      description: The numbers of items to return.
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 50
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
